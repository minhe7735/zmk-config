#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>
#include "definitions.dtsi"

// Global behavior configurations
&sk {
    release-after-ms = <600>;
    quick-release;
};
&sl { 
    ignore-modifiers; 
};
&mt { 
    flavor = "tap-preferred"; 
};
&mmv { 
    time-to-max-speed-ms = <1500>; 
};
&msc { 
    time-to-max-speed-ms = <5000>; 
};

/ {
    chosen { 
        zmk,physical-layout = &foostan_corne_5col_layout; 
    };
    
    behaviors {
        #include "behaviors/HT:home-row-mod:left.dtsi"
        #include "behaviors/HT:home-row-mod:right.dtsi"
        #include "behaviors/HT:home-row-mod-short:left.dtsi"
        #include "behaviors/HT:home-row-mod-short:right.dtsi"
        #include "behaviors/HT:home-row-macro:pointer-left-ctrl.dtsi"
        #include "behaviors/HT:home-row-macro:pointer-right-alt.dtsi"
        #include "behaviors/HT:home-row-macro:pointer-down-shift.dtsi"
        #include "behaviors/HT:pointer.dtsi"
        #include "behaviors/HT:scroll.dtsi"
        #include "behaviors/MM:smart-shift.dtsi"
    };
    
    macros {
        #include "macros/pointer-right-alt.dtsi"
        #include "macros/pointer-left-ctrl.dtsi"
        #include "macros/pointer-down-shift.dtsi"
    };
    
    keymap {
        compatible = "zmk,keymap";
        
        #include "layers/default.dtsi"
        #include "layers/graphite.dtsi"
        #include "layers/symbols.dtsi"
        #include "layers/numbers.dtsi"
        #include "layers/functions.dtsi"
    };
    
    combos {
        compatible = "zmk,combos";

        #include "combos/modded-key:ctrl-delete.dtsi"
        #include "combos/key:escape.dtsi"
        #include "combos/key:tab.dtsi"
        #include "combos/layer:functions.dtsi"
        #include "combos/layer:graphite.dtsi"
        #include "combos/layer:normal.dtsi"
        #include "combos/reset:left.dtsi"
        #include "combos/reset:right.dtsi"
        #include "combos/unlock.dtsi"
    };
};
